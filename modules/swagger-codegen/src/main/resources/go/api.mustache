// DO NOT EDIT: This code is auto-generated from the YAML schema. Any changes made to this file will be lost.
package {{packageName}}

{{#operations}}
import (
	"context"
	"strings"
	"fmt"

	"{{xferPackagePath}}/{{packageName}}"
)

{{#operation}}

{{#hasQueryParams}}
type {{{nickname}}}QueryParams struct {
{{#queryParams}}{{#description}}
    // {{{description}}}{{/description}}
    {{paramName}} {{^required}}*{{/required}}{{{dataType}}} `schema:"{{baseName}}" json:"{{baseName}}{{^required}},omitempty{{/required}}" xml:"{{baseName}}" url:"{{baseName}},omitempty"`
{{/queryParams}}
}

{{/hasQueryParams}}
/**
 * {{notes}}
 *
 * ctx: Context containing meta-info for the request.
{{#pathParams}} * {{paramName}}: {{description}}
{{/pathParams}}
{{#bodyParam}} * value: {{description}}
{{/bodyParam}}
{{#hasQueryParams}} * params: query parameters for the request
{{/hasQueryParams}}
{{#returnType}} * returns {{#returnTypeIsModel}}{{#isListContainer}}[]{{/isListContainer}}{{^isListContainer}}*{{/isListContainer}}{{packageName}}.{{returnBaseTypeInitialCaps}}{{/returnTypeIsModel}}{{^returnTypeIsModel}}{{returnType}}{{/returnTypeIsModel}}
{{/returnType}}
 */
func (c *Client) {{{nickname}}}(ctx context.Context{{#pathParams}}, {{paramName}} string{{/pathParams}}{{#hasQueryParams}}, params *{{{nickname}}}QueryParams{{/hasQueryParams}}{{#bodyParam}}, value {{#typeIsModel}}*{{packageName}}.{{/typeIsModel}}{{dataType}}{{/bodyParam}}{{#formParams}}, value {{dataType}}{{/formParams}}) ({{#returnType}}{{#returnTypeIsModel}}{{#isListContainer}}[]{{/isListContainer}}{{^isListContainer}}*{{/isListContainer}}{{packageName}}.{{returnBaseTypeInitialCaps}}{{/returnTypeIsModel}}{{^returnTypeIsModel}}{{returnType}}{{/returnTypeIsModel}}, {{/returnType}}context.Context, error) {
	{{#returnType}}var res {{#returnTypeIsModel}}{{#isListContainer}}[]{{/isListContainer}}{{packageName}}.{{returnBaseTypeInitialCaps}}{{/returnTypeIsModel}}{{^returnTypeIsModel}}{{returnType}}{{/returnTypeIsModel}}
	{{/returnType}}path := "{{contextPath}}{{path}}"{{#pathParams}}
	path = strings.Replace(path, "{"+"{{baseName}}"+"}", {{paramName}}, -1){{/pathParams}}

	ctxResp, err := c.{{#operationIsPost}}Post{{/operationIsPost}}{{#operationIsGet}}Get{{/operationIsGet}}{{#operationIsPut}}Put{{/operationIsPut}}{{#operationIsDelete}}Delete{{/operationIsDelete}}(ctx, path, {{#hasQueryParams}}params{{/hasQueryParams}}{{^hasQueryParams}}{{#bodyParam}}value{{/bodyParam}}{{^bodyParam}}{{#formParams}}value{{/formParams}}{{^formParams}}nil{{/formParams}}{{/bodyParam}}{{/hasQueryParams}}, {{#returnType}}&res{{/returnType}}{{^returnType}}nil{{/returnType}})
	if err != nil {
		return {{#returnType}}nil, {{/returnType}}ctxResp, err
	}
	return {{#returnType}}{{#returnTypeIsModel}}{{^isListContainer}}&{{/isListContainer}}{{/returnTypeIsModel}}res, {{/returnType}}ctxResp, nil
}
{{/operation}}{{/operations}}
